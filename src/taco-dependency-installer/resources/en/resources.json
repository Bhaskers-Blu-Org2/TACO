{
    "UnsupportedDependenciesHeader": "The installation of the following dependencies is not supported; please install them manually:",
    "_UnsupportedDependenciesHeader.comment": "Message displayed at the top of the list of dependencies that can't be installed by taco-cli.",
    "DependencyLabel": "Dependency: ",
    "_DependencyLabel.comment": "Label for the name of a dependency. This will be followed by the actual name of the dependency.",
    "DependencyVersion": "Version: {0}",
    "_DependencyVersion.comment": "Label and value for the version of a dependency. {0} is the version of the dependency.",
    "InstallDestination": "Install to: {0}",
    "_InstallDestination.comment": "Label and value for the installation directory of a dependency. {0} is the path where the dependency will be installed.",
    "DependencyLicense": "License terms: {0}",
    "_DependencyLicense.comment": "Label and value for the url to the license terms of a dependency. {0} is the url.",
    "InstallingDependenciesHeader": "The following dependencies will be installed on your system:",
    "_InstallingDependenciesHeader.comment": "Message displayed at the top of the list of dependencies that are going to be installed by taco-cli",
    "ModifyInstallPaths": "To modify the install location of the dependencies, please edit the configuration file before proceeding. The file is located at: {0}",
    "_ModifyInstallPaths.comment": "Message to inform the user of the procedure to change the install location of the dependencies. {0} is the path to a configuration file that contains the installation directories where the dependencies will be installed.",
    "ProceedLicenseAgreement": "Please type 'yes' to confirm and proceed. Some of the dependencies listed above require a license agreement. By proceeding, you acknowledge having read, understood and accepted the terms and conditions of each license.",
    "_ProceedLicenseAgreement.comment": "Message displayed after listing the dependencies that will be installed, when at least one of the dependencies require a license agreement. The 'yes' must be localized to exactly the YesString string, surrounded with single quotes.",
    "Proceed": "Please type 'yes' to confirm and proceed.",
    "_Proceed.comment": "Message displayed after listing the dependencies that will be installed, when none of the dependencies require a license agreement. The 'yes' must be localized to exactly the YesString string, surrounded with single quotes.",
    "InstallCompletedSuccessfully": "Success! The third-party dependencies have been installed successfully.",
    "_InstallCompletedSuccessfully.comment": "Message shown after all dependencies have been installed and there are no errors",

    "YesExampleString": "[yes]: ",
    "_YesExampleString.comment": "When the user gets prompted to type 'yes' to accept a prompt, this will be shown as an example of what the user has to type. This must be localized to exactly the YesString string surrounded with square brackets.",
    "YesString": "yes",
    "_YesString.comment": "The string that the user needs to type to proceed with the installation. This string is not shown to the user; this string is what we use internally to compare with the user's input during prompts. So, even though it is not user facing, it still needs to be localized.",

    "InstallCompletedWithErrors": "There were some errors while installing the third-party dependencies. Please see above for details.",
    "_InstallCompletedWithErrors.comment": "Message shown at the end of the installation run if an error occured for at least one of the dependencies.",

    "AbstractMethod": "This is an abstract method and should be implemented by a derived overload",
    "_AbstractMethod.comment": "Error thrown for an unimplemented method",
    "FileNotFound": "Error: Could not locate the file to download.",
    "_FileNotFound.comment": "Error shown when the URL we use to download a file does not result in a successful HTTP request, probably because our metadata is outdated and the file URL has changed.",
    "NoValidInstallOrder": "Error: Could not establish a valid order in which to install dependencies.",
    "_NoValidInstallOrder.comment": "Error shown when the dependencies that need to be installed have cyclic prerequisites, so it is not possible to install them. For example: installing A requires installing B first, but installing B requires installing A first.",
    "UnsupportedPlatform": "Error: Your current platform is not supported: {0}",
    "_UnsupportedPlatform.comment": "Message printed when running on an operating system that we don't support. {0} is the platform.",
    "UnsupportedTargetPlatform": "Error: Target platform not supported: {0}",
    "_UnsupportedTargetPlatform.comment": "Message printed when the install-dependencies command is invoked for a target platform we don't support. {0} is the platform.",
    "InstallationErrors": "The installation completed with some errors:",
    "_InstallationErrors.comment": "Message shown after all dependencies have been installed and there were errors.",
    "LicenseAgreementError": "Error: Must type 'yes' to proceed with the installation.",
    "_LicenseAgreementError.comment": "Error shown when the user doesn't type the correct acceptance string. In this string, 'yes' should exactly match the value for the 'yesString' string defined in this file.",
    "FileCorruptError": "Error: There is a problem with the downloaded installer file. Please try again later.",
    "_FileCorruptError.comment": "Error shown when the downloaded installer is corrupt or invalid.",
    "ErrorDeletingInstallConfig": "Error: Unable to delete the existing installation configuration file located at {0}.",
    "_ErrorDeletingInstallConfig.comment": "Error shown when there is an exception when attempting to delete the existing install config file. {0} is the path to the config file.",
    "ErrorCreatingInstallConfig": "Error: Unable to create installation configuration file at location {0}.",
    "_ErrorCreatingInstallConfig.comment": "Error shown when there is an exception when attempting to create the install config file. {0} is the path where we are attempting to create the config file.",

    "DownloadingLabel": "Downloading...",
    "_DownloadingLabel.comment": "Progress indicator for when a dependency is being downloaded.",
    "InstallingLabel": "Installing...",
    "_InstallingLabel.comment": "Progress indicator for when a dependency is being installed.",
    "InstallingNpmLabel": "Installing via npm...",
    "_InstallingNpmLabel.comment": "Progress indicator for when a dependency is being installed via npm.",
    "SettingSystemVariablesLabel": "Updating system environment variables...",
    "_SettingSystemVariablesLabel.comment": "Progress indicator for when a dependency is being installed via npm.",
    "SystemVariableExists": "Warning: {0} environment variable already exists. Type 'yes' to overwrite the exising environment variable. Overwriting may cause current software to stop working correctly. Not overwriting may result in not being able to build Cordova projects correctly.",
    "_SystemVariableExists.comment": "Warning shown when we attempt to set an environment variable, but one with the same name already exists. {0} is the name of the variable. The 'yes' must be localized to exactly the YesString string, surrounded with single quotes.",

    "NoAdminRights": "Error: Must have administrator privileges to install third-party dependencies. Please try again and provide administrator privileges.",
    "_NoAdminRights.comment": "Error shown when the installer does not have administrator privileges.",
    "InstallConfigNotFound": "Error: Installation configuration file not found, please try again: {0}",
    "_InstallConfigNotFound.comment": "Error shown when the install config file does not exist.",
    "InstallConfigMalformed": "Error: Unable to parse the installation configuration file. Please try again.",
    "_InstallConfigMalformed.comment": "Error shown when the install config file is malformed.",
    "UnkownDependency": "Error: Unkown dependency identifier in the installation configuration file: '{0}'. Please try again.",
    "_UnkownDependency.comment": "Error shown when the install config file contains a dependency identifier that we don't understand. {0} is the unknown id.",
    "UnkownVersion": "Error: Unkown version for dependency '{0}' in the installation configuration file: '{1}'. Please try again.",
    "_UnkownVersion.comment": "Error shown when the install config file contains a version that we don't understand for one of the dependencies. {0} is the dependency's id, {1} is the version we don't understand for that dependency.",
    "InvalidInstallPath": "Error: Invalid installation path for dependency '{0}': {1}",
    "_InvalidInstallPath.comment": "Error shown when the install config file contains an installation destination path that is invalid for one of the dependencies. {0} is the dependency's id, {1} is the install path."
}
