{
    "IndexPageContent": "Remote build Express server open for business on port {0}",
    "_IndexPageContent.comment": "Message sent back in any request for index page of build server",

    "InvalidBuildRequest": "Invalid build request",
    "_InvalidBuildRequest.comment": "Message sent back to Visual Studio if an invalid build request was sent to the build server",
    "BuildRequestMissingCordovaVersion": "A cordova version must be specified on the build request.",
    "_BuildRequestMissingCordovaVersion.comment": "Message sent back to Visual Studio if the build request does not specify the version of Cordova to build with",
    "BuildRequestUnsupportedCordovaVersion": "The build request for cordova version {0} is not supported by the iOS build server. The server is installed with cordova version {1}.",
    "_BuildRequestUnsupportedCordovaVersion.comment": "Message sent back to Visual Studio if the build server does not support the version of Cordova specified in the build request",
    "BuildRequestUnsupportedCommand": "The requested build command {0} is not supported by this build manager.",
    "_BuildRequestUnsupportedCommand.comment": "Message sent back to Visual Studio if the build server does not support the build command specified in the build request (only build and emulate are currently supported)",
    "BuildRequestUnsupportedConfiguration": "The requested build configuration {0} is not supported by this build manager. Only debug, release, or distribution are supported.",    
    "_BuildRequestUnsupportedConfiguration.comment": "Message sent back to Visual Studio if the build server does not support the build configuration specified in the build request",
    "Build-uploaded": "Uploaded build request payload.",
    "_Build-uploaded.comment": "Message sent back to Visual Studio when it is queried for the build status and the build status is uploaded to server",
    "Build-extracted": "Extracted app contents from uploaded build request",
    "_Build-extracted.comment": "Message sent back to Visual Studio when it is queried for the build status and the build status is extracted on server file system",
    "Build-building": "Building Cordova app.",
    "_Build-building.comment": "Message sent back to Visual Studio when it is queried for the build status and the build status is currently building on server",
    "Build-complete": "Build completed successfully.",
    "_Build-complete.comment": "Message sent back to Visual Studio when it is queried for the build status and the build status is successfully completed",
    "Build-downloaded": "Build completed and downloaded.",
    "_Build-downloaded.comment": "Message sent back to Visual Studio when it is queried for the build status and the build status is downloaded from server",
    "Build-deleted": "Deleted build directory after the build was downloaded.",
    "_Build-deleted.comment": "Message sent back to Visual Studio when it is queried for the build status and the build status is deleted from server file system",
    "InvalidCordovaAppMissingConfigXml": "The upload is not a valid Cordova Application. It is missing config.xml in top level directory.",
    "_InvalidCordovaAppMissingConfigXml.comment": "Message sent back to Visual Studio when it queried for the build status and the build failed due to the error with config.xml application file",
    "InvalidCordovaAppUnsupportedAppName": "Unsupported iOS app name {0} in config.xml. Check for characters that are not Printable ASCII, or that match any of the following characters: {1}",
    "_InvalidCordovaAppUnsupportedAppName.comment": "Message sent back to Visual Studio when it queried for the build status and the build failed due to the error with config.xml application file",
    "InvalidCordovaAppMissingWww": "The upload is not a valid Cordova Application. It is missing www directory in top level directory.",
    "_InvalidCordovaAppMissingWww.comment": "Message sent back to Visual Studio when it queried for the build status and the build failed due to the error with www application directory",
    "InvalidCordovaAppBadConfigXml": "The upload is not a valid Cordova Application. Error in parsing config.xml {0}.",
    "_InvalidCordovaAppBadConfigXml.comment": "Message sent back to Visual Studio when it queried for the build status and the build failed due to the error with config.xml application file",
    "BuildFailedWithError": "Build failed with error {0}",
    "_BuildFailedWithError.comment": "Message sent back to Visual Studio when it queried for the build status and the build failed due to an error from Cordova/XCode build operations. NOTE the {0} is from Cordova/XCode and will likely not be localized",
    "EmulateFailedWithError": "Error from attempting to emulate: {0}",
    "_EmulateFailedWithError.comment": "Message sent back to Visual Studio when it requests the build server to emulate a build and the emulation attempt fails with error",
    "EmulateSuccess": "Successfully sent to ios Simulator",
    "_EmulateSuccess.comment":  "Message sent back to Visual Studio when it requests the build server to emulate a build and the emulation attempt is successful (the application is now visibile on the build server)",
    "InstallSuccess": "Successfully installed on the device",
    "_InstallSuccess.comment":  "Message sent back to Visual Studio when it requests the build server to install a build and the installation attempt is successful (the application is now visibile on the device)",
    "RunSuccess": "Successfully ran on the device",
    "_RunSuccess.comment":  "Message sent back to Visual Studio when it requests the build server to run a build and the attempt is successful (the application is running on the device)",
    "DebugSuccess": "Successfully Debugging on the device",
    "_RunSuccess.comment":  "Message sent back to Visual Studio when it requests the build server to debug a build and the attempt is successful (the debugger is running)",
    "BuildNotFound": "Build does not exist",
    "_BuildNotFound.comment": "Message sent back to Visual Studio or user when it queries for a build but the build no longer exists, for example an old build that has been deleted",
    "ProvisioningFailed": "Installation failed: Check your provisioning profile",
    "_ProvisioningFailed.comment": "Message sent back to Visual Studio or user when it attempts to install an app on a device without an appropriate provisioning profile",


    "UnauthorizedClientRequest": "The remote build server denied the build request, because the client certificate is invalid or has expired.  To build your project, you must generate and configure a security PIN. See http://go.microsoft.com/fwlink/?LinkID=511904.",
    "_UnauthorizedClientRequest.comment": "Message sent back to Visual Studio when a build request is submitted to a secure server with invalid client certificate",
    "InvalidPIN": "Invalid PIN in request",
    "_InvalidPIN.comment": "Message sent back to Visual Studio if an invalid PIN is submitted to download client SSL certificate",
    "ClientCertNotFoundForPIN": "Client certificate not found for PIN",
    "_ClientCertNotFoundForPIN.comment": "Message sent back to Visual Studio if a PIN is submitted to for which no valid client SSL certificate is found",
    "CAFilesNotFound": "One or both of required CA files {0} and {1} not found.",
    "_CAFilesNotFound.comment":  "Message printed to console when certificate files cannot be found. {0} and {1} are the files checked for certificates",
    "NoResourcesForLanguage": "No resources defined for language {0}",
    "_NoResourcesForLanguage.comment": "Message sent back in browser if user requests resources for a language that does not have specfic resources",
	"BuildRetentionInit": "Build Retention initialized with baseBuildDir %s, maxBuildsToKeep %d",
	"_BuildRetentionInit.comment": "Message printed to console when build retention is initialized. %s is the directory where builds will be kept, and %d is the number of builds to keep.",
	"BuildRetentionPreDelete": "Deleting eligible builds. Will delete %d builds.",
	"_BuildRetentionPreDelete.comment": "Message printed to console just before we delete old builds. %d is the number of builds we will delete",
	"BuildRetentionDelete": "Deleting build %d from %s",
	"_BuildRetentionDelete": "Message printed to console for each build deleted. %d is the build number, and %s is the build location",
	"BuildManagerInit": "Initialized BuildManager with installedCordovaVersion: %s; baseBuildDir %s; maxBuildsInQueue %d; deleteBuildsOnShutdown %s; allowsEmulate %s; nextBuildNumber %d",
	"_BuildManagerInit.comment": "Message printed to console when the build manager is initialized",

	"NewBuildSubmitted": "New build request submitted:",
	"_NewBuildSubmitted.comment": "Message printed to the console when a new build is received",
	"BuildQueueFull": "Build request rejected. The build queue is full. Limit is {0} queued builds.",
	"_BuildQueueFull.comment": "Message returned to the caller when a build is rejected due to a full queue. {0} is the maximum number of builds",
	"FailedCreateDirectory": "Unable to create extract directory {0}: {1}",
	"_FailedCreateDirectory.comment":  "Message printed to console and reported back to Visual Studio when unable to create the directory we want to unpack a build request to. {0} is the directory, and {1} is the message of the error",
	"NoTgzFound": "Build tgz file no longer exists on file system at {0}",
	"_NoTgzFound.comment": "Message printed to console and reported back to Visual Studio when unable to find the uploaded project. {0} is where the file was expected",
	"TgzExtractError": "An error occurred in extracting contents from {0}: {1}",
	"_TgzExtractError.comment":  "Message printed to console and reported back to Visual Studio when an error occurs when extracting the tgz. {0} is the tgz file, and {1} is the error",

	"BuildInvokedTwice": "Invalid request: build.js process already in use but was asked to build again. This is likely a programming error as a build.js process is meant to be used only once.",
	"_BuildInvokedTwice.comment":  "Message when multiple builds are invoked at the same time.",
	"BuildNotReadyForDownload": "Requested build is not available for download. Status: {0}",
	"_BuildNotReadyForDownload.comment":  "Message when attempting to download a build which is not yet ready. {0} is the current state of the build",

	"FirstRunDependencyConfiguration": "Configuring first-run dependencies.\nTo deploy to physical iOS devices, or to debug a device or simulator, we need some packages from Homebrew.\nInstalling Homebrew may ask you for an admin password. Do you want to continue?",
    "_FirstRunDependencyConfiguration.comment": "Message displayed the first time vs-mda-remote is run, asking for permission to install 3rd party dependencies",
    "HomebrewInstallationQuery": "[y]/n? ",
    "_HomebrewInstallationQuery": "Message asking the user whether to install 3rd party dependencies. Hitting return will default to yes",
    "HomebrewInstallationQueryResponse": "y",
    "_HomebrewInstallationQueryResponse":  "Prefix indicating that the user consents to installing 3rd party dependencies. If the user's entry begins with this string, we assume it means yes, otherwise we assume it meanns no",
    "HomebrewInstallationFailed": "Error installing homebrew packages:\n{0}",
    "_HomebrewInstallationFailed": "Message displayed if installing any of the 3rd party dependencies fails. {0} is the contents of the error",
    "HomebrewPackageVerificationFailed": "Error verifying homebrew packages:\n{0}\nConsider \"brew reinstall libimobiledevice ios-webkit-debug-proxy ideviceinstaller\" and trying again.",
    "_HomebrewPackageVerificationFailed": "Message displayed if after installing the 3rd party dependencies, they do not work. {0} is the contents of the error",
    "HomebrewInstallationSuccess": "Successfully installed homebrew packages.\n",
    "_HomebrewInstallationSuccess": "Message displayed when 3rd party dependencies are successfully installed",
    "HomebrewInstallationDeclined": "If you want to enable deploying to devices or debugging apps on devices or the simulator, delete ~/.vs-mda-remote to be asked again.\n",
    "_HomebrewInstallationDeclined": "Message displayed when the user opts out of installing 3rd party dependencies",

    "UnknownCommand": "Unknown command: %s",
    "_UnknownCommand.comment":  "Message printed when an unknown option is specified. %s is the command",
    "UsageInformation":
        ["vs-mda-remote Remote build server",
        "",
        "Usage:",
        "vs-mda-remote command [options]",
        "",
        "Commands (defaults to start if no command specified):",
        "   start                     Starts the server",
        "   resetServerCert           Resets server SSL certificates",
        "   generateClientCert        Generate a new client certificate for use with Visual Studio",
        "",
        "General Options",
        "   --h[elp]                  Show this help text and exit",
        "   --v[ersion]               Show version information and exit",
        "",
        "Usage for starting server: vs-mda-remote --serverDir [directory] --port [num] --secure [true|false] --pinTimeout [num] --allowsEmulate [true|false] --maxBuildsToKeep [num] --maxBuildsInQueue [num] --deleteBuildsOnShutdown [true|false] --config [path_to_config_file] --writePidToFile [true|false]",
        "",
        "Options",
        "   --serverDir               Root directory for server (defaults to ~/remote-builds if not specified)",
        "   --port                    Port number for server (defaults to 3000 if not specified)",
        "   --secure                  true for https with server/client SSL certs, false for plain http (defaults to true if not specified)",
        "   --pinTimeout              Number of minutes for which client SSL certs can be acquired (defaults to 10 minutes)",
        "   --allowsEmulate           true if server should support running builds in iOS simulator, false if not (defaults to true if not specified)",
        "   --maxBuildsToKeep         Maximum number of builds to retain on disk (defaults to 20 if not specified)",
        "   --maxBuildsInQueue        Maximum number of builds to allow in build queue. New builds over this limit are rejected (defaults to 10 if not specified)",
        "   --deleteBuildsOnShutdown  Delete all builds when the server is shutdown (defaults to true if not specified)",
        "   --config                  Path to server configuration file with any of these settings",
        "   --writePidToFile          true if the server should write its process ID to [serverDir]/running_process_id (defaults to false if not specified)",
        "   --nativeDebugProxyPort    Port number for native debugger (defaults to 3001 if not specified)",
        "   --webDebugProxyDevicePort Port number for webkit debugger device discovery (defaults to 9221 if not specified)",
        "   --webDebugProxyRangeMin   First port number for webkit debugger to assign to devices (defaults to 9222 if not specified)",
        "   --webDebugProxyRangeMax   Last port number for webkit debugger to assign to devices (defaults to 9322 if not specified)",
        "   --lang                    Language to use for console output (deafults to the language given by $LANG if not specified)",
        "",
        "NOTE: command line options override configuration file values.",
        "",
        "Usage for resetServerCert: vs-mda-remote resetServerCert --serverDir [directory] --certExpirationDays [num]",
        "Options",
        "   --serverDir               Root directory for server (defaults to ~/remote-builds if not specified)",
        "   --certExpirationDays      Number of days after which the generated SSL certificates will expire (defaults to 5 years if not specified)",
        "",
        "Usage for generateClientCert: vs-mda-remote generateClientCert --serverDir [directory] --certExpirationDays [num]",
        "Options",
        "   --serverDir               Root directory for server (defaults to ~/remote-builds if not specified)",
        "   --certExpirationDays      Number of days after which the generated SSL certificates will expire (defaults to 5 years if not specified)",
        "",
        "Examples:",
        "Start the server with all defaults (secure server with serverDir ~/remote-builds, port 3000)",
        "vs-mda-remote",
        "",
        "Start the server with a different serverDir, port, and http (non-secure)",
        "vs-mda-remote --serverDir ~/other-builds --port 4000 --secure false",
        "",
        "Reset server certificates to expire in 1 year",
        "vs-mda-remote resetServerCert --certExpirationDays 365",
        "",
        "Generate a new client certificate for use in Visual Studio, that will expire in 1 year",
        "vs-mda-remote generateClientCert --certExpirationDays 365"],
    "_UsageInformation.comment": "Usage information to be printed when the -h argument is specified, or unknown arguments are given. The entries are combined with newlines before printing",

    "NotRunAsRoot": "****** vs-mda-remote should not be run as root. Shutting down.",
    "_NotRunAsRoot.comment": "Message printed when vs-mda-remote is run as root, instructing the user not to do so",
    "ServerStartFailed": "****** Failed to start server: %s",
    "_ServerStartFailed.comment": "Message printed when the vs-mda-remote server fails to start. %s is the underlying error",
    "InsecureServerStarted": "Remote build server listening on [http] port %d",
    "_InsecureServerStarted.comment": "Message printed when the server is started in non-secure mode. %d is the port number",
    "SecureServerStarted": "Remote build server listening on [https] port %d",
    "_SecureServerStarted.comment": "Message printed when the server is started in secure mode. %d is the port number",
    "ServerPortInUse": "Unable to start server on port {0}. Address already in use.",
    "_ServerPortInUse.comment": "Message printed when the server cannot be started due to the port already being used. {0} is the port",
    "UncaughtErrorShutdown": "****** Server will shutdown due to uncaught error ****** ",
    "_UncaughtErrorShutdown.comment": "Message printed when an uncaught error is encountered",
    "ServerShutdown": "****** Performing server shutdown procedures.",
    "_ServerShutdown.comment":  "Message printed when the server shuts down from an error or after the user requests it."
}